{"name":"Articles","featured":[{"name":"What is Aurelia?","description":"Aurelia is a next generation UI framework. Whether you're building apps for the browser, mobile or desktop, Aurelia can enable you to not only create amazing UI, but do it in a way that is maintainable, testable and extensible.","author":{"name":"Rob Eisenberg","url":"http://robeisenberg.com"},"keywords":["JavaScript","SPA"],"links":{"static":"docs/article/what-is-aurelia","html":"docs/article/what-is-aurelia/index.html","fragment":"docs/article/what-is-aurelia/index-fragment.html","self":"docs/article/what-is-aurelia/index.json"}},{"name":"Quick Start","description":"Welcome to Aurelia! This quick start guide will take you through creating a Todo app using Aurelia and briefly explain its main concepts. We assume you are familiar with JavaScript, HTML, and CSS.","author":{"name":"Rob Eisenberg","url":"http://robeisenberg.com"},"keywords":["Getting Started","ES2015","ES2016","TypeScript"],"links":{"static":"docs/article/getting-started/quick-start","html":"docs/article/getting-started/quick-start/index.html","fragment":"docs/article/getting-started/quick-start/index-fragment.html","self":"docs/article/getting-started/quick-start/index.json"}},{"name":"Contact Manager Tutorial","description":"Now that you've got the basics down, you need to learn how to use the CLI, build a more complex app and get a solid knowledge foundation for real-world work. In this tutorial we'll build a small contact manager app and demonstrate a variety of Aurelia's features as well as learn some useful techniques.","author":{"name":"Rob Eisenberg","url":"http://robeisenberg.com"},"keywords":["Getting Started","ES2015","ES2016","TypeScript"],"links":{"static":"docs/article/getting-started/contact-manager-tutorial","html":"docs/article/getting-started/contact-manager-tutorial/index.html","fragment":"docs/article/getting-started/contact-manager-tutorial/index-fragment.html","self":"docs/article/getting-started/contact-manager-tutorial/index.json"}}],"groups":[{"name":"Getting Started","items":[]},{"name":"Build Systems","items":[{"name":"The Aurelia CLI","description":"Learn how to get setup with the Aurelia CLI and use its basic capabilities.","author":{"name":"Rob Eisenberg","url":"http://robeisenberg.com"},"keywords":["Getting Started","ES2015","ES2016","TypeScript"],"links":{"static":"docs/article/build-systems/aurelia-cli","html":"docs/article/build-systems/aurelia-cli/index.html","fragment":"docs/article/build-systems/aurelia-cli/index-fragment.html","self":"docs/article/build-systems/aurelia-cli/index.json"}},{"name":"Setup","description":"If you're interested in getting setup with Webpack to build projects, this article will take you through setting up both your machine and a production quality starter project.","author":{"name":"Bazyli Brzóska","url":"https://invent.life"},"keywords":["JavaScript","TypeScript","SPA","Setup","Webpack"],"links":{"static":"docs/article/build-systems/webpack/setup","html":"docs/article/build-systems/webpack/setup/index.html","fragment":"docs/article/build-systems/webpack/setup/index-fragment.html","self":"docs/article/build-systems/webpack/setup/index.json"}},{"name":"Bundling","description":"Before deploying your app to production, you'll want to bundle the assets for efficient use of the network.","author":{"name":"Bazyli Brzóska","url":"https://invent.life"},"keywords":["Deploy","Bundling","Webpack"],"links":{"static":"docs/article/build-systems/webpack/bundling","html":"docs/article/build-systems/webpack/bundling/index.html","fragment":"docs/article/build-systems/webpack/bundling/index-fragment.html","self":"docs/article/build-systems/webpack/bundling/index.json"}},{"name":"Setup","description":"If you're interested in getting setup with JSPM to build projects, this article will take you through setting up both your machine and a production quality starter project.","author":{"name":"Rob Eisenberg","url":"http://robeisenberg.com"},"keywords":["JavaScript","TypeScript","SPA","Setup"],"links":{"static":"docs/article/build-systems/jspm/setup","html":"docs/article/build-systems/jspm/setup/index.html","fragment":"docs/article/build-systems/jspm/setup/index-fragment.html","self":"docs/article/build-systems/jspm/setup/index.json"}},{"name":"Bundling","description":"Before deploying your app to production, you'll want to bundle the assets for efficient use of the network.","author":{"name":"Shuhel Ahmed","url":"https://github.com/ahmedshuhel"},"keywords":["Deploy","Bundling"],"links":{"static":"docs/article/build-systems/jspm/bundling","html":"docs/article/build-systems/jspm/bundling/index.html","fragment":"docs/article/build-systems/jspm/bundling/index-fragment.html","self":"docs/article/build-systems/jspm/bundling/index.json"}}]},{"name":"Basics","items":[{"name":"Creating Components","description":"Components are the basic building blocks of all Aurelia applications. In this article you'll learn how to build basic components using dependency injection and the component lifecycle.","author":{"name":"Rob Eisenberg","url":"http://robeisenberg.com"},"keywords":["Components","MVVM","Separation of Concerns"],"links":{"static":"docs/article/components","html":"docs/article/components/index.html","fragment":"docs/article/components/index-fragment.html","self":"docs/article/components/index.json"}},{"name":"App Configuration and Startup","description":"In this article you'll learn the various ways to bootstrap and configure Aurelia, along with different mechanisms for controlling the initial render strategy.","author":{"name":"Rob Eisenberg","url":"http://robeisenberg.com"},"keywords":["Framework","Configuration","Startup"],"links":{"static":"docs/article/app-configuration-and-startup","html":"docs/article/app-configuration-and-startup/index.html","fragment":"docs/article/app-configuration-and-startup/index-fragment.html","self":"docs/article/app-configuration-and-startup/index.json"}},{"name":"Dependency Injection: Basics","description":"Learn about how to leverage Aurelia's dependency injection container, the power behind all object creation in Aurelia applications.","author":{"name":"Rob Eisenberg","url":"http://robeisenberg.com"},"keywords":["DI","IoC"],"links":{"static":"docs/article/dependency-injection","html":"docs/article/dependency-injection/index.html","fragment":"docs/article/dependency-injection/index-fragment.html","self":"docs/article/dependency-injection/index.json"}},{"name":"HTTP Services","description":"Usually JavaScript applications need to get their data from or communicate with various web services. In this article we'll take a look at the options Aurelia makes available to you.","author":{"name":"Bryan Smith","url":"https://twitter.com/bryanarrsmith"},"keywords":["HTTP","Fetch","Ajax"],"links":{"static":"docs/article/http-services","html":"docs/article/http-services/index.html","fragment":"docs/article/http-services/index-fragment.html","self":"docs/article/http-services/index.json"}},{"name":"Securing Your App","description":"It's important to secure your application. This article will address a couple of simple things you can do to improve the security of your application.","author":{"name":"Rob Eisenberg","url":"http://robeisenberg.com"},"keywords":["Security","SPA"],"links":{"static":"docs/article/security","html":"docs/article/security/index.html","fragment":"docs/article/security/index-fragment.html","self":"docs/article/security/index.json"}},{"name":"Cheat Sheet","description":"Forgot the syntax for bindings? Need to know how to create a custom attribute? This article contains answers to questions like those as well as a bunch of quick snippets for common tasks.","author":{"name":"Rob Eisenberg","url":"http://robeisenberg.com"},"keywords":["Help","Cheat Sheet"],"links":{"static":"docs/article/cheat-sheet","html":"docs/article/cheat-sheet/index.html","fragment":"docs/article/cheat-sheet/index-fragment.html","self":"docs/article/cheat-sheet/index.json"}},{"name":"Getting Help","description":"As you begin to learn Aurelia and build applications, you may find that you need assistance from time to time. Sometimes it may only be an answer to a quick question or a clarification on the docs. Other times it may be a need for more extensive support, architectural advice or even consulting or training.","author":{"name":"Rob Eisenberg","url":"http://robeisenberg.com"},"keywords":["Help","Support","Training","Community"],"links":{"static":"docs/article/getting-help","html":"docs/article/getting-help/index.html","fragment":"docs/article/getting-help/index-fragment.html","self":"docs/article/getting-help/index.json"}},{"name":"Technical Benefits","description":"There are many technical advantages to using Aurelia. In this article, you will find a list of points we think are interesting. Taken together, there is no other SPA framework today that can match Aurelia.","author":{"name":"Rob Eisenberg","url":"http://robeisenberg.com"},"keywords":["Benefits","Capabilities"],"links":{"static":"docs/article/technical-benefits","html":"docs/article/technical-benefits/index.html","fragment":"docs/article/technical-benefits/index-fragment.html","self":"docs/article/technical-benefits/index.json"}},{"name":"Business Advantages","description":"Aurelia is open source, but unlike much open source in the JavaScript space, Aurelia is an official product with commercial backing. If your business is going to spend significant money building software, you want to do it on a platform that's committed to you as a customer. You want to be able to form a relationship with your technology provider to ensure that you and your developers have a solid platform upon which to build your business now and in the years to come. This article details a few important business advantages which you won't find all together in any product besides Aurelia.","author":{"name":"Rob Eisenberg","url":"http://robeisenberg.com"},"keywords":["Benefits","Business"],"links":{"static":"docs/article/business-advantages","html":"docs/article/business-advantages/index.html","fragment":"docs/article/business-advantages/index-fragment.html","self":"docs/article/business-advantages/index.json"}}]},{"name":"Binding","items":[{"name":"Binding Basics","description":"The basics of data-binding with Aurelia.","author":{"name":"Jeremy Danyow","url":"http://danyow.net"},"keywords":["JavaScript","Data Binding"],"links":{"static":"docs/article/binding/basics","html":"docs/article/binding/basics/index.html","fragment":"docs/article/binding/basics/index-fragment.html","self":"docs/article/binding/basics/index.json"}},{"name":"Class and Style","description":"Data-binding class and style attributes with Aurelia.","author":{"name":"Jeremy Danyow","url":"http://danyow.net"},"keywords":["JavaScript","Data Binding"],"links":{"static":"docs/article/binding/class-and-style","html":"docs/article/binding/class-and-style/index.html","fragment":"docs/article/binding/class-and-style/index-fragment.html","self":"docs/article/binding/class-and-style/index.json"}},{"name":"Binding Checkboxes","description":"Data-binding checkbox inputs with Aurelia.","author":{"name":"Jeremy Danyow","url":"http://danyow.net"},"keywords":["JavaScript","Data Binding"],"links":{"static":"docs/article/binding/checkboxes","html":"docs/article/binding/checkboxes/index.html","fragment":"docs/article/binding/checkboxes/index-fragment.html","self":"docs/article/binding/checkboxes/index.json"}},{"name":"Binding Radios","description":"Data-binding radio inputs with Aurelia.","author":{"name":"Jeremy Danyow","url":"http://danyow.net"},"keywords":["JavaScript","Data Binding"],"links":{"static":"docs/article/binding/radios","html":"docs/article/binding/radios/index.html","fragment":"docs/article/binding/radios/index-fragment.html","self":"docs/article/binding/radios/index.json"}},{"name":"Binding Selects","description":"Data-binding select elements with Aurelia.","author":{"name":"Jeremy Danyow","url":"http://danyow.net"},"keywords":["JavaScript","Data Binding"],"links":{"static":"docs/article/binding/selects","html":"docs/article/binding/selects/index.html","fragment":"docs/article/binding/selects/index-fragment.html","self":"docs/article/binding/selects/index.json"}},{"name":"Delegate vs. Trigger","description":"When to use delegate and when to use trigger.","author":{"name":"Jeremy Danyow","url":"http://danyow.net"},"keywords":["JavaScript","Data Binding"],"links":{"static":"docs/article/binding/delegate-vs-trigger","html":"docs/article/binding/delegate-vs-trigger/index.html","fragment":"docs/article/binding/delegate-vs-trigger/index-fragment.html","self":"docs/article/binding/delegate-vs-trigger/index.json"}},{"name":"Computed Properties","description":"Data-binding computed properties with Aurelia.","author":{"name":"Jeremy Danyow","url":"http://danyow.net"},"keywords":["JavaScript","Data Binding"],"links":{"static":"docs/article/binding/computed-properties","html":"docs/article/binding/computed-properties/index.html","fragment":"docs/article/binding/computed-properties/index-fragment.html","self":"docs/article/binding/computed-properties/index.json"}},{"name":"Value Converters","description":"An overview of the Aurelia binding engine's value converter functionality. Value converters are used to transform data during the data-binding process, both to and from the view.","author":{"name":"Jeremy Danyow","url":"http://danyow.net"},"keywords":["JavaScript","Data Binding","Value Converters"],"links":{"static":"docs/article/binding/value-converters","html":"docs/article/binding/value-converters/index.html","fragment":"docs/article/binding/value-converters/index-fragment.html","self":"docs/article/binding/value-converters/index.json"}},{"name":"Binding Behaviors","description":"An overview of the Aurelia binding engine's binding behavior functionality. Binding Behaviors are used to plug into a binding instance's lifecycle and change the way it operates.","author":{"name":"Jeremy Danyow","url":"http://danyow.net"},"keywords":["JavaScript","Data Binding","Binding Behaviors"],"links":{"static":"docs/article/binding/binding-behaviors","html":"docs/article/binding/binding-behaviors/index.html","fragment":"docs/article/binding/binding-behaviors/index-fragment.html","self":"docs/article/binding/binding-behaviors/index.json"}},{"name":"How it Works","description":"How data-binding works in Aurelia.","author":{"name":"Jeremy Danyow","url":"http://danyow.net"},"keywords":["JavaScript","Data Binding"],"links":{"static":"docs/article/binding/how-it-works","html":"docs/article/binding/how-it-works/index.html","fragment":"docs/article/binding/how-it-works/index-fragment.html","self":"docs/article/binding/how-it-works/index.json"}}]},{"name":"Templating","items":[{"name":"Templating Basics","description":"A basic guide to using Aurelia's templating engine.","author":{"name":"Scott Jackson","url":"http://www.scottmmjackson.com"},"keywords":["JavaScript","Templating","Custom Attributes"],"links":{"static":"docs/article/templating/basics","html":"docs/article/templating/basics/index.html","fragment":"docs/article/templating/basics/index-fragment.html","self":"docs/article/templating/basics/index.json"}},{"name":"HTML Behaviors Introduction","description":"An overview of the Aurelia templating engine's custom attribute and custom element functionality, including not only how to create basic versions, but how to use them both locally and globally in your application.","author":{"name":"Ashley Grant","url":"http://www.ashleygrant.com"},"keywords":["JavaScript","Templating","Introduction","HTML Behaviors","Custom Elements","Custom Attributes"],"links":{"static":"docs/article/templating/html-behaviors-introduction","html":"docs/article/templating/html-behaviors-introduction/index.html","fragment":"docs/article/templating/html-behaviors-introduction/index-fragment.html","self":"docs/article/templating/html-behaviors-introduction/index.json"}},{"name":"Custom Attributes","description":"An overview of the Aurelia templating engine's custom attribute functionality. Custom Attributes are used to add custom behaviors to DOM elements.","author":{"name":"Ashley Grant","url":"http://www.ashleygrant.com"},"keywords":["JavaScript","Templating","Custom Attributes"],"links":{"static":"docs/article/templating/custom-attributes","html":"docs/article/templating/custom-attributes/index.html","fragment":"docs/article/templating/custom-attributes/index-fragment.html","self":"docs/article/templating/custom-attributes/index.json"}},{"name":"Custom Elements","description":"An overview of the Aurelia templating engine's custom element functionality basics. Custom Elements are used to add custom components to Aurelia applications.","author":{"name":"Ashley Grant","url":"http://www.ashleygrant.com"},"keywords":["JavaScript","Templating","Custom Elements","Basics"],"links":{"static":"docs/article/templating/custom-elements","html":"docs/article/templating/custom-elements/index.html","fragment":"docs/article/templating/custom-elements/index-fragment.html","self":"docs/article/templating/custom-elements/index.json"}},{"name":"Content Projection","description":"An overview of the Aurelia templating engine's custom element content projection functionality.","author":{"name":"Ashley Grant","url":"http://www.ashleygrant.com"},"keywords":["JavaScript","Templating","Custom Elements","Content Projection","slot"],"links":{"static":"docs/article/templating/content-projection","html":"docs/article/templating/content-projection/index.html","fragment":"docs/article/templating/content-projection/index-fragment.html","self":"docs/article/templating/content-projection/index.json"}},{"name":"Dynamic UI Composition","description":"An overview of Aurelia's dynamic template composition functionality.","author":{"name":"Dwayne Charrington","url":"http://www.ilikekillnerds.com"},"keywords":["JavaScript","Templating","Composition","Dynamic","Compose","UI"],"links":{"static":"docs/article/templating/dynamic-ui-composition","html":"docs/article/templating/dynamic-ui-composition/index.html","fragment":"docs/article/templating/dynamic-ui-composition/index-fragment.html","self":"docs/article/templating/dynamic-ui-composition/index.json"}}]},{"name":"Routing","items":[{"name":"Router Configuration","description":"This article covers Aurelia's router configuration.","author":{"name":"Jeremy Gonzalez","url":"http://www.jeremyg.net"},"keywords":["JavaScript","Router"],"links":{"static":"docs/article/routing/configuration","html":"docs/article/routing/configuration/index.html","fragment":"docs/article/routing/configuration/index-fragment.html","self":"docs/article/routing/configuration/index.json"}}]},{"name":"Plugins","items":[{"name":"Validation","description":"The basics of validation with Aurelia.","author":{"name":"Jeremy Danyow","url":"http://danyow.net"},"keywords":["Validation","Data Binding","JavaScript","TypeScript"],"links":{"static":"docs/article/plugins/validation","html":"docs/article/plugins/validation/index.html","fragment":"docs/article/plugins/validation/index-fragment.html","self":"docs/article/plugins/validation/index.json"}},{"name":"I18N","description":"Getting Started with I18N in your Aurelia App.","author":{"name":"Vildan Softic","url":"http://pragmatic-coder.net"},"keywords":["I18N","L10N","i18next","JavaScript","TypeScript"],"links":{"static":"docs/article/plugins/i18n","html":"docs/article/plugins/i18n/index.html","fragment":"docs/article/plugins/i18n/index-fragment.html","self":"docs/article/plugins/i18n/index.json"}}]},{"name":"Integrating Other Technology","items":[{"name":"Integrating with Polymer","description":"Polymer is a library for creating reusable web components declaratively with extra features like data binding and property observation. In many ways, it is similar to Aurelia's component support. However, Polymer also includes an extensive catalog of custom elements for everything from material design to credit card forms to embedding Google services like Google Maps and YouTube. With a bit of work, these components can be incorporated into Aurelia applications as well.","author":{"name":"Ben Navetta","url":"https://www.linkedin.com/in/benjaminnavetta"},"keywords":["Integration","Web Components","Polymer"],"links":{"static":"docs/article/integration/polymer","html":"docs/article/integration/polymer/index.html","fragment":"docs/article/integration/polymer/index-fragment.html","self":"docs/article/integration/polymer/index.json"}}]},{"name":"Testing","items":[{"name":"Testing Components","description":"An overview of how to unit test Custom Elements and Custom Attributes.","author":{"name":"Martin Gustafsson","url":"http://github.com/martingust"},"keywords":["JavaScript","Unit Testing","Custom Elements","Custom Attributes"],"links":{"static":"docs/article/testing/components","html":"docs/article/testing/components/index.html","fragment":"docs/article/testing/components/index-fragment.html","self":"docs/article/testing/components/index.json"}},{"name":"End-to-End Testing","description":"Testing front-end applications has become an important task for today's developers. Not only do you want to ensure that your application's internal code operates correctly, but you also want to validate the in-browser behavior. This article will show you how to achieve this by combining Aurelia and Protractor.","author":{"name":"Vildan Softic","url":"https://github.com/zewa666"},"keywords":["Testing","E2E","Protractor"],"links":{"static":"docs/article/testing/end-to-end","html":"docs/article/testing/end-to-end/index.html","fragment":"docs/article/testing/end-to-end/index-fragment.html","self":"docs/article/testing/end-to-end/index.json"}}]}],"links":{"static":"docs/article","html":"docs/article/index.html","fragment":"docs/article/index-fragment.html","self":"docs/article/index.json"}}