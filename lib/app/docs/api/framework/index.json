{"name":"Framework","description":"The aurelia framework brings together all the required core aurelia libraries into a ready-to-go application-building platform.","links":{"static":"docs/api/framework","html":"docs/api/framework/index.html","fragment":"docs/api/framework/index-fragment.html","self":"docs/api/framework/index.json"},"kindString":"module","classes":[{"properties":[{"name":"container","kindString":"Property","flags":{"isExported":true},"comment":{"shortText":"The root DI container used by the application."},"sources":[{"fileName":"aurelia-framework.d.ts","line":44,"character":11}],"type":{"type":"reference","name":"Container"}},{"name":"host","kindString":"Property","flags":{"isExported":true},"comment":{"shortText":"The DOM Element that Aurelia will attach to."},"sources":[{"fileName":"aurelia-framework.d.ts","line":33,"character":6}],"type":{"type":"reference","name":"Element"}},{"name":"loader","kindString":"Property","flags":{"isExported":true},"comment":{"shortText":"/**\nThe loader used by the application."},"sources":[{"fileName":"aurelia-framework.d.ts","line":39,"character":8}],"type":{"type":"reference","name":"Loader"}},{"name":"resources","kindString":"Property","flags":{"isExported":true},"comment":{"shortText":"The global view resources used by the application."},"sources":[{"fileName":"aurelia-framework.d.ts","line":49,"character":11}],"type":{"type":"reference","name":"ViewResources"}},{"name":"use","kindString":"Property","flags":{"isExported":true},"comment":{"shortText":"The configuration used during application startup."},"sources":[{"fileName":"aurelia-framework.d.ts","line":54,"character":5}],"type":{"type":"reference","name":"FrameworkConfiguration","id":1181}}],"events":[],"methods":[{"name":"enhance","kindString":"Method","flags":{"isExported":true},"signatures":[{"name":"enhance","kindString":"Call signature","flags":{},"comment":{"shortText":"Enhances the host's existing elements with behaviors and bindings.","returns":"Returns a Promise for the current Aurelia instance.\n"},"parameters":[{"name":"bindingContext","kindString":"Parameter","flags":{"isOptional":true},"comment":{"text":"A binding context for the enhanced elements."},"type":{"type":"reference","name":"Object"}},{"name":"applicationHost","kindString":"Parameter","flags":{"isOptional":true},"comment":{"text":"The DOM object that Aurelia will enhance."},"type":{"type":"union","types":[{"type":"instrinct","name":"string"},{"type":"reference","name":"Element"}]}}],"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"reference","name":"Aurelia","id":1160}]}}],"sources":[{"fileName":"aurelia-framework.d.ts","line":76,"character":9}]},{"name":"setRoot","kindString":"Method","flags":{"isExported":true},"signatures":[{"name":"setRoot","kindString":"Call signature","flags":{},"comment":{"shortText":"Instantiates the root component and adds it to the DOM.","returns":"Returns a Promise of the current Aurelia instance.\n"},"parameters":[{"name":"root","kindString":"Parameter","flags":{"isOptional":true},"comment":{"text":"The root component to load upon bootstrap."},"type":{"type":"instrinct","name":"string"}},{"name":"applicationHost","kindString":"Parameter","flags":{"isOptional":true},"comment":{"text":"The DOM object that Aurelia will attach to."},"type":{"type":"union","types":[{"type":"instrinct","name":"string"},{"type":"reference","name":"Element"}]}}],"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"reference","name":"Aurelia","id":1160}]}}],"sources":[{"fileName":"aurelia-framework.d.ts","line":84,"character":9}]},{"name":"start","kindString":"Method","flags":{"isExported":true},"signatures":[{"name":"start","kindString":"Call signature","flags":{},"comment":{"shortText":"Loads plugins, then resources, and then starts the Aurelia instance.","returns":"Returns a Promise with the started Aurelia instance.\n"},"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"reference","name":"Aurelia","id":1160}]}}],"sources":[{"fileName":"aurelia-framework.d.ts","line":68,"character":7}]}],"name":"Aurelia","kindString":"Class","flags":{"isExported":true},"comment":{"shortText":"The framework core that provides the main Aurelia object."},"sources":[{"fileName":"aurelia-framework.d.ts","line":28,"character":28}],"constructorMethod":{"name":"constructor","kindString":"Constructor","flags":{"isExported":true},"comment":{"shortText":"Creates an instance of Aurelia."},"signatures":[{"name":"new Aurelia","kindString":"Constructor signature","flags":{},"comment":{"shortText":"Creates an instance of Aurelia."},"parameters":[{"name":"loader","kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"The loader for this Aurelia instance to use. If a loader is not specified, Aurelia will use the loader type specified by PLATFORM.Loader."},"type":{"type":"reference","name":"Loader"}},{"name":"container","kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"The dependency injection container for this Aurelia instance to use. If a container is not specified, Aurelia will create an empty, global container."},"type":{"type":"reference","name":"Container"}},{"name":"resources","kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"The resource registry for this Aurelia instance to use. If a resource registry is not specified, Aurelia will create an empty registry.\n"},"type":{"type":"reference","name":"ViewResources"}}],"type":{"type":"reference","name":"Aurelia","id":1160}}],"sources":[{"fileName":"aurelia-framework.d.ts","line":54,"character":30}]}},{"properties":[{"name":"aurelia","kindString":"Property","flags":{"isExported":true},"comment":{"shortText":"The aurelia instance."},"sources":[{"fileName":"aurelia-framework.d.ts","line":100,"character":9}],"type":{"type":"reference","name":"Aurelia","id":1160}},{"name":"container","kindString":"Property","flags":{"isExported":true},"comment":{"shortText":"The root DI container used by the application."},"sources":[{"fileName":"aurelia-framework.d.ts","line":95,"character":11}],"type":{"type":"reference","name":"Container"}}],"events":[],"methods":[{"name":"apply","kindString":"Method","flags":{"isExported":true},"signatures":[{"name":"apply","kindString":"Call signature","flags":{},"comment":{"shortText":"Loads and configures the plugins registered with this instance.","returns":"Returns a promise which resolves when all plugins are loaded and configured.\n"},"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"instrinct","name":"void"}]}}],"sources":[{"fileName":"aurelia-framework.d.ts","line":229,"character":7}]},{"name":"basicConfiguration","kindString":"Method","flags":{"isExported":true},"signatures":[{"name":"basicConfiguration","kindString":"Call signature","flags":{},"comment":{"shortText":"Sets up a basic Aurelia configuration. This is equivalent to calling `.defaultBindingLanguage().defaultResources().eventAggregator();`","returns":"Returns the current FrameworkConfiguration instance.\n"},"type":{"type":"reference","name":"FrameworkConfiguration","id":1181}}],"sources":[{"fileName":"aurelia-framework.d.ts","line":211,"character":20}]},{"name":"defaultBindingLanguage","kindString":"Method","flags":{"isExported":true},"signatures":[{"name":"defaultBindingLanguage","kindString":"Call signature","flags":{},"comment":{"shortText":"Plugs in the default binding language from aurelia-templating-binding.","returns":"Returns the current FrameworkConfiguration instance.\n"},"type":{"type":"reference","name":"FrameworkConfiguration","id":1181}}],"sources":[{"fileName":"aurelia-framework.d.ts","line":181,"character":24}]},{"name":"defaultResources","kindString":"Method","flags":{"isExported":true},"signatures":[{"name":"defaultResources","kindString":"Call signature","flags":{},"comment":{"shortText":"Plugs in the default templating resources (if, repeat, show, compose, etc.) from aurelia-templating-resources.","returns":"Returns the current FrameworkConfiguration instance.\n"},"type":{"type":"reference","name":"FrameworkConfiguration","id":1181}}],"sources":[{"fileName":"aurelia-framework.d.ts","line":199,"character":18}]},{"name":"developmentLogging","kindString":"Method","flags":{"isExported":true},"signatures":[{"name":"developmentLogging","kindString":"Call signature","flags":{},"comment":{"shortText":"Plugs in the ConsoleAppender and sets the log level to debug.","returns":"Returns the current FrameworkConfiguration instance.\n"},"type":{"type":"reference","name":"FrameworkConfiguration","id":1181}}],"sources":[{"fileName":"aurelia-framework.d.ts","line":223,"character":20}]},{"name":"eventAggregator","kindString":"Method","flags":{"isExported":true},"signatures":[{"name":"eventAggregator","kindString":"Call signature","flags":{},"comment":{"shortText":"Plugs in the event aggregator from aurelia-event-aggregator.","returns":"Returns the current FrameworkConfiguration instance.\n"},"type":{"type":"reference","name":"FrameworkConfiguration","id":1181}}],"sources":[{"fileName":"aurelia-framework.d.ts","line":205,"character":17}]},{"name":"feature","kindString":"Method","flags":{"isExported":true},"signatures":[{"name":"feature","kindString":"Call signature","flags":{},"comment":{"shortText":"Configures an internal feature plugin before Aurelia starts.","returns":"Returns the current FrameworkConfiguration instance.\n"},"parameters":[{"name":"plugin","kindString":"Parameter","flags":{},"comment":{"text":"The folder for the internal plugin to configure (expects an index.js in that folder)."},"type":{"type":"instrinct","name":"string"}},{"name":"config","kindString":"Parameter","flags":{"isOptional":true},"comment":{"text":"The configuration for the specified plugin."},"type":{"type":"instrinct","name":"any"}}],"type":{"type":"reference","name":"FrameworkConfiguration","id":1181}}],"sources":[{"fileName":"aurelia-framework.d.ts","line":152,"character":9}]},{"name":"globalName","kindString":"Method","flags":{"isExported":true},"signatures":[{"name":"globalName","kindString":"Call signature","flags":{},"comment":{"shortText":"Renames a global resource that was imported.","returns":"Returns the current FrameworkConfiguration instance.\n"},"parameters":[{"name":"resourcePath","kindString":"Parameter","flags":{},"comment":{"text":"The path to the resource."},"type":{"type":"instrinct","name":"string"}},{"name":"newName","kindString":"Parameter","flags":{},"comment":{"text":"The new name."},"type":{"type":"instrinct","name":"string"}}],"type":{"type":"reference","name":"FrameworkConfiguration","id":1181}}],"sources":[{"fileName":"aurelia-framework.d.ts","line":167,"character":12}]},{"name":"globalResources","kindString":"Method","flags":{"isExported":true},"signatures":[{"name":"globalResources","kindString":"Call signature","flags":{},"comment":{"shortText":"Adds globally available view resources to be imported into the Aurelia framework.","returns":"Returns the current FrameworkConfiguration instance.\n"},"parameters":[{"name":"resources","kindString":"Parameter","flags":{},"comment":{"text":"The relative module id to the resource. (Relative to the plugin's installer.)"},"type":{"type":"union","types":[{"type":"instrinct","name":"string"},{"type":"instrinct","isArray":true,"name":"string"}]}}],"type":{"type":"reference","name":"FrameworkConfiguration","id":1181}}],"sources":[{"fileName":"aurelia-framework.d.ts","line":159,"character":17}]},{"name":"history","kindString":"Method","flags":{"isExported":true},"signatures":[{"name":"history","kindString":"Call signature","flags":{},"comment":{"shortText":"Plugs in the default history implementation from aurelia-history-browser.","returns":"Returns the current FrameworkConfiguration instance.\n"},"type":{"type":"reference","name":"FrameworkConfiguration","id":1181}}],"sources":[{"fileName":"aurelia-framework.d.ts","line":193,"character":9}]},{"name":"instance","kindString":"Method","flags":{"isExported":true},"signatures":[{"name":"instance","kindString":"Call signature","flags":{},"comment":{"shortText":"Adds an existing object to the framework's dependency injection container.","returns":"Returns the current FrameworkConfiguration instance.\n"},"parameters":[{"name":"type","kindString":"Parameter","flags":{},"comment":{"text":"The object type of the dependency that the framework will inject."},"type":{"type":"instrinct","name":"any"}},{"name":"instance","kindString":"Parameter","flags":{},"comment":{"text":"The existing instance of the dependency that the framework will inject."},"type":{"type":"instrinct","name":"any"}}],"type":{"type":"reference","name":"FrameworkConfiguration","id":1181}}],"sources":[{"fileName":"aurelia-framework.d.ts","line":114,"character":10}]},{"name":"plugin","kindString":"Method","flags":{"isExported":true},"signatures":[{"name":"plugin","kindString":"Call signature","flags":{},"comment":{"shortText":"Configures an external, 3rd party plugin before Aurelia starts.","returns":"Returns the current FrameworkConfiguration instance.\n"},"parameters":[{"name":"plugin","kindString":"Parameter","flags":{},"comment":{"text":"The ID of the 3rd party plugin to configure."},"type":{"type":"instrinct","name":"string"}},{"name":"config","kindString":"Parameter","flags":{"isOptional":true},"comment":{"text":"The configuration for the specified plugin."},"type":{"type":"instrinct","name":"any"}}],"type":{"type":"reference","name":"FrameworkConfiguration","id":1181}}],"sources":[{"fileName":"aurelia-framework.d.ts","line":175,"character":8}]},{"name":"postTask","kindString":"Method","flags":{"isExported":true},"signatures":[{"name":"postTask","kindString":"Call signature","flags":{},"comment":{"shortText":"Adds an async function that runs after the plugins are run.","returns":"Returns the current FrameworkConfiguration instance.\n"},"parameters":[{"name":"task","kindString":"Parameter","flags":{},"comment":{"text":"The function to run after start."},"type":{"type":"reference","name":"Function"}}],"type":{"type":"reference","name":"FrameworkConfiguration","id":1181}}],"sources":[{"fileName":"aurelia-framework.d.ts","line":144,"character":10}]},{"name":"preTask","kindString":"Method","flags":{"isExported":true},"signatures":[{"name":"preTask","kindString":"Call signature","flags":{},"comment":{"shortText":"Adds an async function that runs before the plugins are run.","returns":"Returns the current FrameworkConfiguration instance.\n"},"parameters":[{"name":"task","kindString":"Parameter","flags":{},"comment":{"text":"The function to run before start."},"type":{"type":"reference","name":"Function"}}],"type":{"type":"reference","name":"FrameworkConfiguration","id":1181}}],"sources":[{"fileName":"aurelia-framework.d.ts","line":137,"character":9}]},{"name":"router","kindString":"Method","flags":{"isExported":true},"signatures":[{"name":"router","kindString":"Call signature","flags":{},"comment":{"shortText":"Plugs in the router from aurelia-templating-router.","returns":"Returns the current FrameworkConfiguration instance.\n"},"type":{"type":"reference","name":"FrameworkConfiguration","id":1181}}],"sources":[{"fileName":"aurelia-framework.d.ts","line":187,"character":8}]},{"name":"singleton","kindString":"Method","flags":{"isExported":true},"signatures":[{"name":"singleton","kindString":"Call signature","flags":{},"comment":{"shortText":"Adds a singleton to the framework's dependency injection container.","returns":"Returns the current FrameworkConfiguration instance.\n"},"parameters":[{"name":"type","kindString":"Parameter","flags":{},"comment":{"text":"The object type of the dependency that the framework will inject."},"type":{"type":"instrinct","name":"any"}},{"name":"implementation","kindString":"Parameter","flags":{"isOptional":true},"comment":{"text":"The constructor function of the dependency that the framework will inject."},"type":{"type":"reference","name":"Function"}}],"type":{"type":"reference","name":"FrameworkConfiguration","id":1181}}],"sources":[{"fileName":"aurelia-framework.d.ts","line":122,"character":11}]},{"name":"standardConfiguration","kindString":"Method","flags":{"isExported":true},"signatures":[{"name":"standardConfiguration","kindString":"Call signature","flags":{},"comment":{"shortText":"Sets up the standard Aurelia configuration. This is equivalent to calling `.defaultBindingLanguage().defaultResources().eventAggregator().history().router();`","returns":"Returns the current FrameworkConfiguration instance.\n"},"type":{"type":"reference","name":"FrameworkConfiguration","id":1181}}],"sources":[{"fileName":"aurelia-framework.d.ts","line":217,"character":23}]},{"name":"transient","kindString":"Method","flags":{"isExported":true},"signatures":[{"name":"transient","kindString":"Call signature","flags":{},"comment":{"shortText":"Adds a transient to the framework's dependency injection container.","returns":"Returns the current FrameworkConfiguration instance.\n"},"parameters":[{"name":"type","kindString":"Parameter","flags":{},"comment":{"text":"The object type of the dependency that the framework will inject."},"type":{"type":"instrinct","name":"any"}},{"name":"implementation","kindString":"Parameter","flags":{"isOptional":true},"comment":{"text":"The constructor function of the dependency that the framework will inject."},"type":{"type":"reference","name":"Function"}}],"type":{"type":"reference","name":"FrameworkConfiguration","id":1181}}],"sources":[{"fileName":"aurelia-framework.d.ts","line":130,"character":11}]}],"name":"FrameworkConfiguration","kindString":"Class","flags":{"isExported":true},"comment":{"shortText":"Manages configuring the aurelia framework instance."},"sources":[{"fileName":"aurelia-framework.d.ts","line":90,"character":43}],"constructorMethod":{"name":"constructor","kindString":"Constructor","flags":{"isExported":true},"comment":{"shortText":"Creates an instance of FrameworkConfiguration."},"signatures":[{"name":"new FrameworkConfiguration","kindString":"Constructor signature","flags":{},"comment":{"shortText":"Creates an instance of FrameworkConfiguration."},"parameters":[{"name":"aurelia","kindString":"Parameter","flags":{},"comment":{"shortText":"An instance of Aurelia.\n"},"type":{"type":"reference","name":"Aurelia","id":1160}}],"type":{"type":"reference","name":"FrameworkConfiguration","id":1181}}],"sources":[{"fileName":"aurelia-framework.d.ts","line":100,"character":19}]}}],"interfaces":[],"variables":[{"name":"LogManager","kindString":"Variable","flags":{"isExported":true},"comment":{"shortText":"The log manager."},"sources":[{"fileName":"aurelia-framework.d.ts","line":242,"character":25}],"type":{"type":"instrinct","name":"any"}}],"functions":[],"api":{"name":"Framework","package":{"name":"aurelia-framework","version":"1.1.2","description":"The aurelia framework brings together all the required core aurelia libraries into a ready-to-go application-building platform.","keywords":["aurelia","framework","spa"],"homepage":"http://aurelia.io","bugs":{"url":"https://github.com/aurelia/framework/issues"},"license":"MIT","author":"Rob Eisenberg <rob@bluespire.com> (http://robeisenberg.com/)","main":"dist/commonjs/aurelia-framework.js","typings":"dist/aurelia-framework.d.ts","repository":{"type":"git","url":"http://github.com/aurelia/framework"},"jspm":{"registry":"npm","jspmPackage":true,"main":"aurelia-framework","format":"amd","directories":{"dist":"dist/amd"},"peerDependencies":{"aurelia-binding":"^1.0.0","aurelia-dependency-injection":"^1.0.0","aurelia-loader":"^1.0.0","aurelia-logging":"^1.0.0","aurelia-metadata":"^1.0.0","aurelia-pal":"^1.0.0","aurelia-path":"^1.0.0","aurelia-task-queue":"^1.0.0","aurelia-templating":"^1.0.0"},"dependencies":{"aurelia-binding":"^1.0.0","aurelia-dependency-injection":"^1.0.0","aurelia-loader":"^1.0.0","aurelia-logging":"^1.0.0","aurelia-metadata":"^1.0.0","aurelia-pal":"^1.0.0","aurelia-path":"^1.0.0","aurelia-task-queue":"^1.0.0","aurelia-templating":"^1.0.0"},"devDependencies":{"aurelia-pal-browser":"^1.0.0-rc.1.0.0","babel":"babel-core@^5.8.24","babel-runtime":"^5.8.24","core-js":"^2.0.3"}},"dependencies":{"aurelia-binding":"^1.0.0","aurelia-dependency-injection":"^1.0.0","aurelia-loader":"^1.0.0","aurelia-logging":"^1.0.0","aurelia-metadata":"^1.0.0","aurelia-pal":"^1.0.0","aurelia-path":"^1.0.0","aurelia-task-queue":"^1.0.0","aurelia-templating":"^1.0.0"},"devDependencies":{"aurelia-tools":"^0.2.4","babel-dts-generator":"^0.6.1","babel-eslint":"^6.1.2","babel-plugin-syntax-flow":"^6.8.0","babel-plugin-transform-decorators-legacy":"^1.3.4","babel-plugin-transform-es2015-modules-amd":"^6.8.0","babel-plugin-transform-es2015-modules-commonjs":"^6.11.5","babel-plugin-transform-es2015-modules-systemjs":"^6.11.6","babel-plugin-transform-flow-strip-types":"^6.8.0","babel-preset-es2015":"^6.9.0","babel-preset-es2015-loose":"^7.0.0","babel-preset-es2015-loose-native-modules":"^1.0.0","babel-preset-stage-1":"^6.5.0","del":"^2.2.1","eslint":"^3.1.1","gulp":"^3.9.1","gulp-babel":"^6.1.2","gulp-bump":"^2.2.0","gulp-concat":"^2.6.0","gulp-conventional-changelog":"^1.1.0","gulp-eslint":"^3.0.1","gulp-ignore":"^2.0.1","gulp-insert":"^0.5.0","gulp-rename":"^1.2.2","gulp-typedoc":"^2.0.0","gulp-typedoc-extractor":"0.0.8","gulp-typescript":"^2.13.6","gulp-util":"^3.0.7","jasmine-core":"^2.4.1","karma":"^1.1.2","karma-babel-preprocessor":"^6.0.1","karma-chrome-launcher":"^1.0.1","karma-coverage":"^1.1.1","karma-jasmine":"^1.0.2","karma-jspm":"^2.2.0","merge2":"^1.0.2","object.assign":"^4.0.4","require-dir":"^0.3.0","run-sequence":"^1.2.2","through2":"^2.0.1","typedoc":"^0.4.4","typescript":"^1.9.0-dev.20160622-1.0","vinyl":"^1.1.1","vinyl-paths":"^2.1.0","yargs":"^4.8.1"},"aurelia":{"documentation":{"articles":[{"title":"What is Aurelia?","href":"doc/article/en-US/what-is-aurelia.md"},{"title":"Quick Start","href":"doc/article/en-US/quick-start.md"},{"title":"Contact Manager Tutorial","href":"doc/article/en-US/contact-manager-tutorial.md"},{"title":"The Aurelia CLI","href":"doc/article/en-US/the-aurelia-cli.md"},{"title":"JSPM Setup","href":"doc/article/en-US/setup-jspm.md"},{"title":"JSPM Bundling","href":"doc/article/en-US/bundling-jspm.md"},{"title":"Webpack Setup","href":"doc/article/en-US/setup-webpack.md"},{"title":"Webpack Bundling","href":"doc/article/en-US/bundling-webpack.md"},{"title":"Creating Components","href":"doc/article/en-US/creating-components.md"},{"title":"App Configuration and Startup","href":"doc/article/en-US/app-configuration-and-startup.md"},{"title":"Securing Your App","href":"doc/article/en-US/securing-your-app.md"},{"title":"Cheat Sheet","href":"doc/article/en-US/cheat-sheet.md"},{"title":"Getting Help","href":"doc/article/en-US/getting-help.md"},{"title":"Technical Benefits","href":"doc/article/en-US/technical-benefits.md"},{"title":"Business Advantages","href":"doc/article/en-US/business-advantages.md"},{"title":"Integrating with Polymer","href":"doc/article/en-US/integrating-with-polymer.md"},{"title":"Migrating from Angular 1","href":"doc/article/en-US/migrating-from-angular-1.md"}]}}},"src":"../framework/dist/aurelia-framework.d.ts","dest":"docs/api/framework"}}