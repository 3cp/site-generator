{"name":"Event Aggregator","description":"A lightweight pub/sub messaging system for app-wide or per-object loosely coupled events.","links":{"static":"docs/api/event-aggregator","html":"docs/api/event-aggregator/index.html","fragment":"docs/api/event-aggregator/index-fragment.html","self":"docs/api/event-aggregator/index.json"},"kindString":"module","classes":[{"properties":[],"events":[],"methods":[{"name":"publish","kindString":"Method","flags":{"isExported":true},"signatures":[{"name":"publish","kindString":"Call signature","flags":{},"comment":{"shortText":"Publishes a message."},"parameters":[{"name":"event","kindString":"Parameter","flags":{},"comment":{"text":"The event or channel to publish to."},"type":{"type":"union","types":[{"type":"instrinct","name":"string"},{"type":"instrinct","name":"any"}]}},{"name":"data","kindString":"Parameter","flags":{"isOptional":true},"comment":{"text":"The data to publish on the channel.\n"},"type":{"type":"instrinct","name":"any"}}],"type":{"type":"instrinct","name":"void"}}],"sources":[{"fileName":"aurelia-event-aggregator.d.ts","line":32,"character":9}]},{"name":"subscribe","kindString":"Method","flags":{"isExported":true},"signatures":[{"name":"subscribe","kindString":"Call signature","flags":{},"comment":{"shortText":"Subscribes to a message channel or message type."},"parameters":[{"name":"event","kindString":"Parameter","flags":{},"comment":{"text":"The event channel or event data type."},"type":{"type":"union","types":[{"type":"instrinct","name":"string"},{"type":"reference","name":"Function"}]}},{"name":"callback","kindString":"Parameter","flags":{},"comment":{"text":"The callback to be invoked when when the specified message is published.\n"},"type":{"type":"reference","name":"Function"}}],"type":{"type":"reference","name":"Subscription","id":888}}],"sources":[{"fileName":"aurelia-event-aggregator.d.ts","line":39,"character":11}]},{"name":"subscribeOnce","kindString":"Method","flags":{"isExported":true},"signatures":[{"name":"subscribeOnce","kindString":"Call signature","flags":{},"comment":{"shortText":"Subscribes to a message channel or message type, then disposes the subscription automatically after the first message is received."},"parameters":[{"name":"event","kindString":"Parameter","flags":{},"comment":{"text":"The event channel or event data type."},"type":{"type":"union","types":[{"type":"instrinct","name":"string"},{"type":"reference","name":"Function"}]}},{"name":"callback","kindString":"Parameter","flags":{},"comment":{"text":"The callback to be invoked when when the specified message is published.\n"},"type":{"type":"reference","name":"Function"}}],"type":{"type":"reference","name":"Subscription","id":888}}],"sources":[{"fileName":"aurelia-event-aggregator.d.ts","line":46,"character":15}]}],"name":"EventAggregator","kindString":"Class","flags":{"isExported":true},"comment":{"shortText":"Enables loosely coupled publish/subscribe messaging."},"sources":[{"fileName":"aurelia-event-aggregator.d.ts","line":20,"character":36}],"constructorMethod":{"name":"constructor","kindString":"Constructor","flags":{"isExported":true},"comment":{"shortText":"Creates an instance of the EventAggregator class."},"signatures":[{"name":"new EventAggregator","kindString":"Constructor signature","flags":{},"comment":{"shortText":"Creates an instance of the EventAggregator class."},"type":{"type":"reference","name":"EventAggregator","id":891}}],"sources":[{"fileName":"aurelia-event-aggregator.d.ts","line":20,"character":38}]}}],"interfaces":[{"properties":[],"events":[],"methods":[{"name":"dispose","kindString":"Method","flags":{"isExported":true},"signatures":[{"name":"dispose","kindString":"Call signature","flags":{},"comment":{"shortText":"Disposes the subscription."},"type":{"type":"instrinct","name":"void"}}],"sources":[{"fileName":"aurelia-event-aggregator.d.ts","line":11,"character":9}]}],"name":"Subscription","kindString":"Interface","flags":{"isExported":true},"comment":{"shortText":"Represents a disposable subsciption to an EventAggregator event."},"sources":[{"fileName":"aurelia-event-aggregator.d.ts","line":6,"character":37}]}],"variables":[],"functions":[{"name":"configure","kindString":"Function","flags":{"isExported":true},"signatures":[{"name":"configure","kindString":"Call signature","flags":{},"comment":{"shortText":"Configures a global EA by merging functionality into the Aurelia instance."},"parameters":[{"name":"config","kindString":"Parameter","flags":{},"comment":{"text":"The Aurelia Framework configuration object used to configure the plugin.\n"},"type":{"type":"reference","name":"Object"}}],"type":{"type":"instrinct","name":"void"}}],"sources":[{"fileName":"aurelia-event-aggregator.d.ts","line":59,"character":33}]},{"name":"includeEventsIn","kindString":"Function","flags":{"isExported":true},"signatures":[{"name":"includeEventsIn","kindString":"Call signature","flags":{},"comment":{"shortText":"Includes EA functionality into an object instance."},"parameters":[{"name":"obj","kindString":"Parameter","flags":{},"comment":{"text":"The object to mix Event Aggregator functionality into.\n"},"type":{"type":"reference","name":"Object"}}],"type":{"type":"reference","name":"EventAggregator","id":891}}],"sources":[{"fileName":"aurelia-event-aggregator.d.ts","line":53,"character":39}]}],"api":{"name":"Event Aggregator","package":{"name":"aurelia-event-aggregator","version":"1.0.1","description":"A lightweight pub/sub messaging system for app-wide or per-object loosely coupled events.","keywords":["aurelia","event aggregator","events","pub/sub"],"homepage":"http://aurelia.io","bugs":{"url":"https://github.com/aurelia/event-aggregator/issues"},"license":"MIT","author":"Rob Eisenberg <rob@bluespire.com> (http://robeisenberg.com/)","main":"dist/commonjs/aurelia-event-aggregator.js","typings":"dist/aurelia-event-aggregator.d.ts","repository":{"type":"git","url":"http://github.com/aurelia/event-aggregator"},"jspm":{"registry":"npm","jspmPackage":true,"main":"aurelia-event-aggregator","format":"amd","directories":{"dist":"dist/amd"},"peerDependencies":{"aurelia-logging":"^1.0.0"},"dependencies":{"aurelia-logging":"^1.0.0"},"devDependencies":{"babel":"babel-core@^5.1.13","babel-runtime":"^5.1.13","core-js":"^2.0.3"}},"dependencies":{"aurelia-logging":"^1.0.0"},"devDependencies":{"aurelia-tools":"^0.2.4","babel-dts-generator":"^0.6.1","babel-eslint":"^6.1.2","babel-plugin-syntax-flow":"^6.8.0","babel-plugin-transform-decorators-legacy":"^1.3.4","babel-plugin-transform-es2015-modules-amd":"^6.8.0","babel-plugin-transform-es2015-modules-commonjs":"^6.11.5","babel-plugin-transform-es2015-modules-systemjs":"^6.11.6","babel-plugin-transform-flow-strip-types":"^6.8.0","babel-preset-es2015":"^6.9.0","babel-preset-es2015-loose":"^7.0.0","babel-preset-es2015-loose-native-modules":"^1.0.0","babel-preset-stage-1":"^6.5.0","del":"^2.2.1","gulp":"^3.9.1","gulp-babel":"^6.1.2","gulp-bump":"^2.2.0","gulp-concat":"^2.6.0","gulp-conventional-changelog":"^1.1.0","gulp-eslint":"^3.0.1","gulp-ignore":"^2.0.1","gulp-insert":"^0.5.0","gulp-rename":"^1.2.2","gulp-typedoc":"^2.0.0","gulp-typedoc-extractor":"^0.0.8","gulp-typescript":"^2.13.6","gulp-util":"^3.0.7","jasmine-core":"^2.4.1","karma":"^1.1.2","karma-babel-preprocessor":"^6.0.1","karma-chrome-launcher":"^1.0.1","karma-coverage":"^1.1.1","karma-jasmine":"^1.0.2","karma-jspm":"^2.2.0","merge2":"^1.0.2","object.assign":"^4.0.4","require-dir":"^0.3.0","run-sequence":"^1.2.2","through2":"^2.0.1","typedoc":"^0.4.4","typescript":"^1.9.0-dev.20160622-1.0","vinyl":"^1.1.1","vinyl-paths":"^2.1.0","yargs":"^4.8.1"},"aurelia":{"documentation":{"articles":[]}}},"src":"../event-aggregator/dist/aurelia-event-aggregator.d.ts","dest":"docs/api/event-aggregator"}}